# =============================================================================
# APEX AI SPORTS PREDICTION ENGINE - ENVIRONMENT VARIABLES
# =============================================================================
# Instructions: Copy this file to .env and fill in your actual values
# For Railway deployment: Set these in the Railway dashboard under Variables

# -----------------------------------------------------------------------------
# APPLICATION CONFIGURATION
# -----------------------------------------------------------------------------
NODE_ENV=production
PORT=5000

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# PostgreSQL Database URL (Railway provides this automatically)
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:password@host:port/apex_predictions

# -----------------------------------------------------------------------------
# SPORTS DATA APIs - FOR REAL-TIME ODDS, SCORES, LINEUPS
# -----------------------------------------------------------------------------
# The Odds API (theoddsapi.com) - For live betting odds across multiple bookmakers
# Free tier: 500 requests/month | Paid: $50-$500/month
ODDS_API_KEY=your_odds_api_key_here

# SportsData.io - For comprehensive sports statistics, scores, and player data
# Plans: $29-$749/month depending on sport coverage
SPORTSDATA_API_KEY=your_sportsdata_api_key_here

# API-Football (api-sports.io) - Football/Soccer data
# Free tier: 100 requests/day | Paid: $15-$1500/month
FOOTBALL_API_KEY=your_football_api_key_here

# API-Basketball - Basketball data
API_BASKETBALL_KEY=your_basketball_api_key_here

# API-Hockey - Hockey data
API_HOCKEY_KEY=your_hockey_api_key_here

# API-Tennis - Tennis data
TENNIS_API_KEY=your_tennis_api_key_here

# RapidAPI Key (if using multiple sports APIs through RapidAPI)
RAPIDAPI_KEY=your_rapidapi_key_here

# -----------------------------------------------------------------------------
# WEB SEARCH & NEWS APIs - FOR INVESTIGATIVE JOURNALISM PHASE
# -----------------------------------------------------------------------------
# SerpAPI - For Google search results (news, forums, tactical analysis)
# Plans: $50-$250/month | 5,000-100,000 searches
SERP_API_KEY=your_serpapi_key_here

# NewsAPI - For sports news aggregation
# Free tier: 100 requests/day | Paid: $449-$1999/month
NEWS_API_KEY=your_newsapi_key_here

# Bing Search API (Azure) - Alternative search provider
# Pay-as-you-go: $3-$10 per 1000 queries
BING_SEARCH_KEY=your_bing_search_key_here

# Twitter/X API - For player social media sentiment analysis
TWITTER_API_KEY=your_twitter_api_key_here
TWITTER_API_SECRET=your_twitter_api_secret_here
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here

# -----------------------------------------------------------------------------
# AI & MACHINE LEARNING APIs - FOR ANALYSIS & PREDICTIONS
# -----------------------------------------------------------------------------
# OpenAI API - For advanced text analysis, sentiment analysis, tactical insights
# Pay-as-you-go: ~$0.002-$0.06 per 1K tokens (GPT-4)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic Claude API - Alternative AI for analysis
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google Gemini API - For multimodal analysis
GOOGLE_AI_API_KEY=your_google_ai_key_here

# Hugging Face API - For custom ML models
HUGGINGFACE_API_KEY=your_huggingface_key_here

# -----------------------------------------------------------------------------
# SPORTYBET PLATFORM ACCESS
# -----------------------------------------------------------------------------
# SportyBet API credentials (if available - may need to contact SportyBet)
# Note: SportyBet may not have a public API - web scraping may be required
SPORTYBET_API_KEY=your_sportybet_api_key_here
SPORTYBET_API_SECRET=your_sportybet_secret_here

# Alternative: Web scraping configuration
SPORTYBET_BASE_URL=https://www.sportybet.com
SCRAPER_USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

# -----------------------------------------------------------------------------
# WEATHER APIs - FOR ENVIRONMENTAL FACTOR ANALYSIS
# -----------------------------------------------------------------------------
# OpenWeatherMap - For game-day weather conditions
# Free tier: 1000 calls/day | Paid: $40-$180/month
WEATHER_API_KEY=your_weather_api_key_here

# -----------------------------------------------------------------------------
# ADDITIONAL DATA SOURCES
# -----------------------------------------------------------------------------
# Injury & Lineup Data
INJURY_API_KEY=your_injury_api_key_here

# Travel & Timezone Data
TIMEZONE_DB_KEY=your_timezonedb_key_here

# -----------------------------------------------------------------------------
# SECURITY & SESSION
# -----------------------------------------------------------------------------
# Session secret for authentication (generate a random 32+ character string)
SESSION_SECRET=your_super_secret_session_key_change_this_in_production

# JWT Secret (if implementing user authentication)
JWT_SECRET=your_jwt_secret_key_here

# Encryption key for sensitive data
ENCRYPTION_KEY=your_encryption_key_32_chars_min

# -----------------------------------------------------------------------------
# RATE LIMITING & CACHING
# -----------------------------------------------------------------------------
# Redis URL for caching API responses and rate limiting (optional but recommended)
REDIS_URL=redis://default:password@host:port

# -----------------------------------------------------------------------------
# MONITORING & LOGGING
# -----------------------------------------------------------------------------
# Sentry DSN for error tracking (optional)
SENTRY_DSN=your_sentry_dsn_here

# LogTail/BetterStack for logging (optional)
LOGTAIL_SOURCE_TOKEN=your_logtail_token_here

# -----------------------------------------------------------------------------
# FEATURES FLAGS & CONFIGURATION
# -----------------------------------------------------------------------------
# Enable/disable real API calls vs mock data
USE_REAL_APIS=false

# Confidence threshold for making predictions
MIN_CONFIDENCE_THRESHOLD=7.0

# Minimum EV% to recommend a bet
MIN_EV_THRESHOLD=4.0

# Kelly Criterion multiplier (0.25 = Quarter-Kelly)
KELLY_MULTIPLIER=0.25

# Maximum number of predictions to generate per day
MAX_DAILY_PREDICTIONS=10

# Enable historical performance tracking
ENABLE_PERFORMANCE_TRACKING=true

# Enable meta-learning and model updates
ENABLE_META_LEARNING=true

# -----------------------------------------------------------------------------
# CORS & ALLOWED ORIGINS (for production)
# -----------------------------------------------------------------------------
ALLOWED_ORIGINS=https://your-frontend-domain.com,https://your-apex-app.railway.app

# -----------------------------------------------------------------------------
# WEBHOOK & NOTIFICATIONS (optional)
# -----------------------------------------------------------------------------
# Slack webhook for prediction notifications
SLACK_WEBHOOK_URL=your_slack_webhook_url_here

# Discord webhook
DISCORD_WEBHOOK_URL=your_discord_webhook_url_here

# Email service (SendGrid, Mailgun, etc.)
EMAIL_SERVICE_API_KEY=your_email_api_key_here
EMAIL_FROM=apex@yourdomain.com

# -----------------------------------------------------------------------------
# RAILWAY-SPECIFIC (Auto-generated by Railway)
# -----------------------------------------------------------------------------
# These are automatically set by Railway - DO NOT SET MANUALLY
# RAILWAY_ENVIRONMENT=production
# RAILWAY_PROJECT_ID=auto-generated
# RAILWAY_SERVICE_ID=auto-generated
# RAILWAY_DEPLOYMENT_ID=auto-generated

# -----------------------------------------------------------------------------
# NOTES FOR RAILWAY DEPLOYMENT
# -----------------------------------------------------------------------------
# 1. Add all required API keys in Railway dashboard: Settings â†’ Variables
# 2. Railway auto-provides: PORT, DATABASE_URL (if you add PostgreSQL)
# 3. Set NODE_ENV=production in Railway
# 4. For sensitive keys, use Railway's encrypted variables
# 5. Group related variables using Railway's variable groups feature
# 6. Consider using Railway's Redis plugin for caching
